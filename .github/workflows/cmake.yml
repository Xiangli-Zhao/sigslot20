name: CMake

on:
  push:
    branches: 
      - master
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**/CMakeLists.txt'
      - '**.cmake'
      - '.github/workflows/**.yml'
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "Windows clang-cl", os: windows-latest, cc: "clang-cl", cxx: "clang-cl" }
          - { name: "Ubuntu gcc", os: ubuntu-20.04, cc: "gcc-10", cxx: "g++-10" }
          - { name: "Ubuntu clang", os: ubuntu-20.04, cc: "clang", cxx: "clang++" }
    steps:
    - uses: actions/checkout@v2
    
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build
    - name: Configure cmake - Windows
      shell: bash
      working-directory: ${{github.workspace}}/build
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      
      run: cmake $GITHUB_WORKSPACE -G "Visual Studio 17 2022" -T ClangCl -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSIGSLOT_RUN_TESTS=OFF
      if: runner.os == 'Windows'
    - name: Configure cmake
      shell: bash
      working-directory: ${{github.workspace}}/build
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSIGSLOT_RUN_TESTS=OFF
      if: runner.os != 'Windows'
    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      
      run: cmake --build . --config $BUILD_TYPE --target tests
    - name: Test
      working-directory: ${{github.workspace}}/build/test
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
    - name: Cache
      uses: actions/cache@v2.1.3
      with:
        path: build
        key: ${{matrix.config.name}}
